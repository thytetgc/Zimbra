#!/bin/bash

# Script ultra-otimizado para configuração massiva no Zimbra
# Autor: Seu Nome
# Versão: 4.0
# Data: $(date +%Y-%m-%d)

## Configurações
LOG_FILE="/var/log/zimbra_mass_config_$(date +%Y%m%d-%H%M%S).log"
BATCH_SIZE=500  # Tamanho dos lotes para processamento
PARALLEL_DOMAINS=10  # Número de domínios para processar em paralelo

## Verificações iniciais
if [ "$(id -u)" -ne 0 ]; then
   echo "ERRO: Execute como root" >&2
   exit 1
fi

if ! id -u zimbra >/dev/null 2>&1; then
   echo "ERRO: Usuário zimbra não encontrado" >&2
   exit 1
fi

ZMPROV_CMD="/opt/zimbra/bin/zmprov"  # Caminho direto para melhor performance

## Função para processar usuários em bloco
process_batch() {
    local dominio=$1
    local usuarios=$2
    
    # Preparar comandos em bloco
    local batch_cmds=""
    local count=0
    
    while read usuario; do
        batch_cmds+="ma $usuario zimbraPrefClientType '' "
        batch_cmds+="zimbraPrefSkin '' "
        batch_cmds+="zimbraAvailableSkin '' "
        batch_cmds+="zimbraFeatureAllowUsernameInPassword '' "
        batch_cmds+="zimbraPrefGroupMailBy ''\n"
        
        ((count++))
    done <<< "$usuarios"
    
    # Executar bloco de comandos
    echo -e "$batch_cmds" | su - zimbra -c "$ZMPROV_CMD" >/dev/null 2>&1
    
    echo "[$dominio] $count usuários processados em bloco"
}

## Execução principal
{
echo "==== INÍCIO DA EXECUÇÃO ===="
date
echo "Obtendo lista de domínios..."

# Obter e ordenar domínios
DOMINIOS=$(su - zimbra -c "$ZMPROV_CMD gad" | sort)

echo "Processando ${#DOMINIOS[@]} domínios com até $PARALLEL_DOMAINS em paralelo..."

# Processar domínios em paralelo
for DOMINIO in $DOMINIOS; do
    (
        echo "[$(date +%T)] Iniciando domínio: $DOMINIO"
        
        # Obter usuários ordenados
        USUARIOS=$(su - zimbra -c "$ZMPROV_CMD -l gaa $DOMINIO" | sort)
        TOTAL_USERS=$(wc -l <<< "$USUARIOS")
        
        echo "[$DOMINIO] Encontrados $TOTAL_USERS usuários"
        
        # Dividir em lotes e processar
        offset=0
        while [ $offset -lt $TOTAL_USERS ]; do
            batch=$(tail -n +$offset <<< "$USUARIOS" | head -n $BATCH_SIZE)
            process_batch "$DOMINIO" "$batch"
            offset=$((offset + BATCH_SIZE))
        done
        
        echo "[$(date +%T)] Domínio concluído: $DOMINIO"
    ) &
    
    # Controlar paralelismo
    if (( $(jobs -p | wc -l) >= PARALLEL_DOMAINS )); then
        wait -n
    fi
done

wait  # Aguardar todos os domínios

echo "==== EXECUÇÃO CONCLUÍDA ===="
date
} | tee -a "$LOG_FILE"

echo "Log completo disponível em: $LOG_FILE"
